name: Magento UI autotests

permissions:
  contents: read
  pages: write
  id-token: write

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Select test set
        required: true
        type: choice
        default: regression
        options:
          - all
          - extended
          - regression
          - smoke    

jobs:  
  get-history:
    runs-on: ubuntu-latest
    name: Get report history
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y unzip jq

      - name: Fetch artifact ID        
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/alliskov/magento-UI_test_automation/actions/artifacts?name=allure-results")
          
          artifact_id=$(echo "$response" | jq -r '.artifacts[0].id // empty')
          if [ -z "$artifact_id" ]; then
            echo "Artifact not found or empty response."
            exit 1
          fi

          echo "artifact_id=$artifact_id" >> $GITHUB_ENV

      - name: Download artifact
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/alliskov/magento-UI_test_automation/actions/artifacts/$artifact_id/zip" \
            -o artifact.zip

      - name: Extract artifact
        run: |
          mkdir allure-results
          unzip artifact.zip -d allure-results
                
      - name: Fetch report ID        
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/alliskov/magento-UI_test_automation/actions/artifacts?name=github-pages")
          
          report_id=$(echo "$response" | jq -r '.artifacts[0].id // empty')
          if [ -z "$report_id" ]; then
            echo "Report ID not found or empty response."
            exit 1
          fi

          echo "report_id=$report_id" >> $GITHUB_ENV

      - name: Download report history
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/alliskov/magento-UI_test_automation/actions/artifacts/$report_id/zip" \
            -o report.zip

      - name: Extract report history
        run: |
          mkdir report
          unzip report.zip -d report
          tar -xvf report/artifact.tar -C report          
          rm -r allure-results/history
          cp -r report/history/ allure-results               

      - name: Save reports history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

      
  run-tests:
    needs: get-history
    runs-on: ubuntu-latest
    name: Run tests    
    steps:       
      - name: Check out source repository
        uses: actions/checkout@v4
        
      - name: Set up Python 
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Set up test environment
        run: pip install -r requirements.txt
        
      - name: Download workflow artifacts
        uses: actions/download-artifact@v4
        
      - name: Run all tests
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
        
      - name: Run extended test set
        if: "github.event.inputs.deployment_target == 'extended'"
        run: pytest -m extended --alluredir=allure-results
        continue-on-error: true
        
      - name: Run regression test set
        if: "github.event.inputs.deployment_target == 'regression'"
        run: pytest -m regression --alluredir=allure-results
        continue-on-error: true
        
      - name: Run smoke test set
        if: "github.event.inputs.deployment_target == 'smoke'"
        run: pytest -m smoke --alluredir=allure-results
        continue-on-error: true
        
      - name: Install Java      
        uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: "17"
          
      - name: Install Allure
        run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.32.0/allure-2.32.0.tgz && sudo tar -zxvf allure-2.32.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.32.0/bin/allure /usr/bin/allure
        
      - name: Generate report
        run: allure generate -c allure-results -o allure-report
      
      - name: Save report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          retention-days: 1

  publish-report:
    needs: run-tests
    name: Report publication
    runs-on: ubuntu-latest
    steps: 
      - name: Download artifacts
        uses: actions/download-artifact@v4
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report/
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
